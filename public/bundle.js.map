{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./public/javascripts/components/circle.js","webpack:///./public/javascripts/components/elements.js","webpack:///./public/javascripts/components/enemy_circle.js","webpack:///./public/javascripts/components/friendly_circle.js","webpack:///./public/javascripts/components/game.js","webpack:///./public/javascripts/components/game_view.js","webpack:///./public/javascripts/components/util.js","webpack:///./public/javascripts/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;ACjF2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,wB;AACA,2BAA2B,kDAAI;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA,K;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;;AAEe,qEAAM,E;;;;;;;;;;;;AC1ErtMA;AAAA;AAAA;AAA6B;AACiB;;AAE9C,0BAA0B,+CAAM;AAChC;AACA;AACA;;AAEA;AACA,0BAA0B,wDAAc;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;;ACpB3B;AAAA;AAAA;AAA6B;AACW;;AAExC,6BAA6B,+CAAM;AACnC;AACA;AACA;;AAEA;AACA,8BAA8B,qDAAW;AACzC;AACA,S;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,6EAAc,E;;;;;;;;;;;;ACrB7B;AAAA;AAAA;AAA8C;AACN;;;AAGxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,kBAAkB;AACzC,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qDAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;;AAEA,iBAAiB;AACjB;AACA,yC;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,wDAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA,iB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,2BAA2B,uBAAuB;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;AC3GnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,0B;;;;;;;;;;;;;;;;ACnBA;AACA,IAAW;AACX;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACwC;AACJ;AACpC,iBAAiB,mBAAO,CAAC,4EAAwB;AACS;AAClB;AACW;AACM;;;AAGzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAkB,8DAAS,iC;;AAE3B;AACA,iBAAiB,2DAAM;AACvB,mBAAmB,wDAAI;AACvB;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,6DAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,gEAAW;AACpE;AACA,OAAO,yDAAyD,mEAAc;AAC9E;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;;AAEA,kBAAkB,0DAAM;AACxB,gBAAgB,wDAAI;;AAEpB;AACA,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./public/javascripts/index.js\");\n","\nimport {dist} from './util'\n\nclass Circle {\n    constructor(opts) {\n        this.pos = opts.pos;\n        this.color = opts.color;\n        this.rad = opts.rad;\n        this.growSpeed = opts.growSpeed;\n        this.maxRad = opts.maxRad;\n        this.isGrowing = opts.isGrowing;\n        this.area = Math.pow((opts.rad * Math.PI), 2)\n    }\n\n    draw (ctx) {\n        // let grd = ctx.createRadialGradient(0, 50, 5, 90, 60, 100);\n        // grd.addColorStop(0, \"white\" );\n        // grd.addColorStop(1, this.color);\n        var gradient = ctx.createLinearGradient(0, 0, 900, 0);\n        gradient.addColorStop(\"0\", \"magenta\");\n        gradient.addColorStop(\"0.5\", \"blue\");\n        gradient.addColorStop(\"1.0\", \"red\");\n        ctx.fillStyle = this.color;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = \"#c6d613\";\n        ctx.shadowBlur = 8;\n        ctx.shadowColor = \"#ac13d6\";\n        // ctx.fillStyle = grid;\n        // ctx.strokeStyle = '2px white';\n        ctx.beginPath();\n        ctx.arc(\n            this.pos[0], \n            this.pos[1], \n            this.rad, 0, 2 * Math.PI, true\n        );\n        ctx.fill();\n        ctx.stroke();\n        \n        \n        // if (this.rad < this.maxRad) {\n        //     this.rad += this.growSpeed;\n        // }\n    }\n\n    hasCollided(oCirc) {  \n        const centerDist = dist(\n            this.pos[0], \n            this.pos[1], \n            oCirc.pos[0], \n            oCirc.pos[1]\n            );\n        \n        return centerDist  < this.rad + oCirc.rad;\n    } \n\n    collideWith(object) {\n   \n    }\n\n    grow() {\n        if ((this.rad < this.maxRad) && (this.isGrowing === 0)) {\n            this.rad += this.growSpeed;\n        } else if (this.isGrowing === 2 && this.rad >= 1) {\n            this.rad -= this.growSpeed;\n        } else {\n            this.rad = this.rad;\n        }\n    }\n    render (ctx) {\n\n    }\n\n}\n\nexport default Circle;","export const Levels = {\n  1: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n  2: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n  3: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n  4: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n  5: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n  6: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n  7: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n  8: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n  9: [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ],\n};\n\n\nexport const Gradients = [\n  \"background: linear-gradient(90deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%)\",\n  \"background: radial-gradient(circle, rgba(174,238,237,1) 34%, rgba(148,163,233,1) 77%)\",\n  \"background: linear-gradient(90deg, rgba(236,157,133,1) 0%, rgba(189,53,235,0.6797093837535014) 81%, rgba(241,246,255,0.6797093837535014) 100%)\",\n  \"background: linear-gradient(0deg, rgba(34,193,195,1) 0%, rgba(45,253,120,0.8841911764705882) 100%)\",\n  \"background: radial-gradient(circle, rgba(53,235,115,1) 0%, rgba(81,136,255,0.7945553221288515) 100%)\",\n  \"background: radial-gradient(circle, rgba(238,174,235,0.7609418767507002) 34%, rgba(170,233,148,1) 77%)\",\n  \"background: linear-gradient(0deg, rgba(195,103,34,1) 0%, rgba(85,45,253,0.8841911764705882) 100%)\",\n  \"background: linear-gradient(0deg, rgba(34,195,143,0.8589810924369747) 0%, rgba(253,45,208,0.8841911764705882) 100%)\",\n  \"background: linear-gradient(0deg, rgba(90,195,34,0.8589810924369747) 0%, rgba(144,45,253,0.8841911764705882) 100%)\",\n  \"background: radial-gradient(circle, rgba(235,53,220,1) 0%, rgba(255,211,81,0.788953081232493) 100%)\",\n  \"background: linear-gradient(90deg, rgba(180,180,58,1) 0%, rgba(200,29,253,0.9570203081232493) 50%, rgba(252,69,105,1) 100%)\",\n  \"background: radial-gradient(circle, rgba(193,174,238,1) 34%, rgba(233,181,148,1) 77%)\",\n  \"background: radial-gradient(circle, rgba(44,38,75,0.9850315126050421) 34%, rgba(193,20,63,1) 77%)\",\n];\n","import Circle from './circle'\nimport friendlyCircle from './friendly_circle'\n\nclass enemyCircle extends Circle {\n  constructor(options) {\n    super(options);\n  }\n\n  collideWith(object) {\n    if (object instanceof friendlyCircle) {\n      this.isGrowing = 1;\n    }\n  }\n\n  pauseGrowth(time) {\n      this.isGrowing = 1;\n      setInterval(() => (this.isGrowing = 0), time)\n  }\n}\n\nexport default enemyCircle;\n\n","import Circle from './circle'\nimport enemyCircle from './enemy_circle'\n\nclass friendlyCircle extends Circle {\n    constructor(options) {\n        super(options) \n    }\n\n    collideWith(object) {\n        if (object instanceof enemyCircle) {\n            this.isGrowing = 1;\n        } \n    }\n    speedGrowth(time) {\n        const oldSpeed = this.growSpeed;\n      this.growSpeed *= 3;\n      setInterval(() => (this.growSpeed = oldSpeed), time)\n\n    }\n}\n\nexport default friendlyCircle;","import friendlyCircle from './friendly_circle'\nimport enemyCircle from './enemy_circle'\n\n\nclass Game {\n    constructor() {\n        this.enemyCircles = [];\n        this.friendlyCircles = [];\n        this.gameOver = false;\n    }\n\n    buildLevel(level) {\n        for (let i = 0; i < level.length; i++) {\n            for (let j = 0; j< level[0].length; j++) {\n                if (level[i][j] === 1) {\n                    let circleX = 65 * i;\n                    let circleY = 65 * j;\n                    let growSpeed = .1 +(Math.floor(Math.random() * 5) *.03);\n                    let maxRad = Math.floor(Math.random() * 5) * 100 + 100;\n                    let rad = Math.floor(Math.random() * 5) + 10;\n                    let colors = [ '#c43e37', '#c45637', '#b37120', '#b32036', '#a68428']\n                    let randomColor = colors[Math.floor(Math.random() * 4)]\n                    const circle = new enemyCircle({\n                        pos: [circleX, circleY],\n                        color: randomColor,\n                        rad: rad,\n                        growSpeed: growSpeed,\n                        maxRad: maxRad,\n                        isGrowing: 0,\n                    })\n\n                    this.enemyCircles.push(circle)\n\n                } else if (level[i][j] === 2) {\n                    let circleX = 65 * i;\n                    let circleY = 65 * j;   \n                    let growSpeed = .1+ (Math.floor(Math.random() * 5) * .03);\n                    let maxRad = Math.floor(Math.random() * 5) * 100 + 100;\n                    let rad = Math.floor(Math.random() * 5) + 10;\n                    let colors = [ '#28a641', '#28a6a4', '#284aa6', '#41338f', '#1f6a87']\n                    let randomColor = colors[Math.floor(Math.random() * 4)]\n                    \n                     const circle = new friendlyCircle({\n                       pos: [circleX, circleY],\n                       color: randomColor,\n                       rad: rad,\n                       growSpeed: growSpeed,\n                       maxRad: maxRad,\n                       isGrowing: 0,\n                     });\n\n                    this.friendlyCircles.push(circle);\n                } \n            }\n        }\n    }\n\n    playLevel(level) {\n        this.startTime = Date.now\n    }\n\n    levelTimer() {\n        return (Date.now() - startTime) / 1000\n    }\n\n    allCircles() {\n        return [].concat(this.enemyCircles, this.friendlyCircles);\n    }\n\n    draw(ctx) {\n       ctx.clearRect(0, 0, 1200, 800);\n        this.allCircles().forEach(circle => (circle.draw(ctx)));\n        this.allCircles().forEach(circle => (circle.grow()))\n        this.checkCollisions();\n    }\n\n    checkCollisions() {\n        const allCircles = this.allCircles();\n        for (let i = 0; i < allCircles.length; i++) {\n            for (let j = 0; j < allCircles.length; j++){\n                const circ1 =  allCircles[i];\n                const circ2 = allCircles[j];\n\n                if (circ1.hasCollided(circ2)) {\n                    circ1.collideWith(circ2);\n                }\n            }\n        }\n    }\n\n    enemyCircleScore() {\n        const rads = this.enemyCircles.map(circle => circle.rad);\n        return rads.reduce((a, b) => (a + b));\n    }\n\n    friendlyCircleScore() {\n        const rads = this.friendlyCircles.map(circle => circle.rad);\n        return rads.reduce((a, b) => (a + b));\n    }\n \n    overallScore() {\n        const overall = (this.friendlyCircleScore() / (this.enemyCircleScore() + this.friendlyCircleScore())) * 100;\n       \n        return overall;\n    }\n}\n\nexport default Game;","class GameView {\n    constructor(ctx, game) {\n        this.ctx = ctx;\n        this.game = game;\n\n    }\n\n    start() {\n        requestAnimationFrame(this.animate.bind(this))\n    }\n    \n    animate () {\n        this.game.draw(this.ctx);\n        requestAnimationFrame(this.animate.bind(this))\n    }\n  \n    // bindKeyHandlers() {\n    // }\n}\n\n\nmodule.exports = GameView;","\n    \n    // util func\n    export const dist = (x1, y1, x2, y2) => {\n      let xDistance = x2 - x1;\n      let yDistance = y2 - y1;\n    \n      return Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2));\n    }\n\n","// const axios = require('axios');\nimport Circle from './components/circle'\nimport Game from './components/game'\nconst GameView = require(\"./components/game_view\");\nimport { Levels, Gradients } from \"./components/elements\";\nimport { dist } from './components/util'\nimport enemyCircle from './components/enemy_circle'\nimport friendlyCircle from './components/friendly_circle'\n\n\n// handleMusic(e) {\n//   e.preventDefault();\n//   if (this.musicBtn.classList.contains('music-on')) {\n//     this.music.play();\n//     this.musicBtn.classList.remove('music-on');\n//     this.musicBtn.classList.add('music-off');\n//     this.musicBtn.innerHtml = \"Music: Off\";\n//     } else if (this.musicBtn.classList.contains('music-off')) {\n//       this.music.pause();\n//       this.musicBtn.classList.remove('music-off');\n//       this.musicBtn.classList.add('music-on');\n//       this.musicBtn.innerHtml = \"Music: On\";\n//     }\n// }\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  \n  const canvas = document.getElementById(\"game-canvas\");\n  canvas.width = \"1100\";\n  canvas.height = \"715\";\n  canvas.style =  Gradients[Math.floor(Math.random() * 12)];  \n\n  const ctx = canvas.getContext(\"2d\");\n  const levels = Levels;\n  const game = new Game();\n  let currentLevel = 1;\n  let startText = `Phase ${currentLevel} commence.`;\n  let startTime = Date.now();\n  let playerScore = 0;\n  //game.overallScore()\n  let currentLevelScore = 0;\n\n  let clearWelcome = window.setInterval( ()  => {\n    startText = '';\n  }, 2000);\n\n  const restartGame = () => {\n    game.gameOver = false;\n    currentLevel = 1;\n    startTime = Date.now();\n  }\n\n  const levelTimer = () => {\n   20000 - (Date.now() - startTime) / 1000\n  }\n\n  function isIntersect(point, circle) {\n    return dist(point[0],point[1], circle.pos[0],circle.pos[1]) < circle.rad;\n  }\n\n  canvas.addEventListener('click', (e)=> {\n    const pos = [\n      e.layerX,\n      e.layerY,\n    ];\n    \n    game.allCircles().forEach(circle => {\n      if (isIntersect(pos, circle) && (circle instanceof enemyCircle)) {\n        circle.pauseGrowth(3000);\n      } else if (isIntersect(pos, circle) && (circle instanceof friendlyCircle)) {\n        circle.speedGrowth(1000);\n      }\n    })\n  })\n\n  game.buildLevel(levels[currentLevel]);\n\n  window.ctx = ctx;\n\n  window.Circle = Circle;\n  window.Game = Game;\n  \n  new GameView(ctx, game).start();\n});\n"],"sourceRoot":""}